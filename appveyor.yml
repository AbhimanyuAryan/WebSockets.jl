environment:
  matrix:
#  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x64/0.6/julia-0.6-latest-win64.exe"
#  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x86/0.6/julia-0.6-latest-win32.exe"
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
branches:
  only:
    - 0.7-alpha
    - master
# The build script below uses master. - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

# Not installing browsers. Browser tests are unstable due to upstream functionality.
# Browser tests can be run locally, and are present in the test/optional folder.
install:
#  - choco install PhantomJS
#  - choco install firefox
#  - choco install googlechrome
#  - choco install ie11
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $env:JULIA_URL,
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  - ps: |
      Write-Host "This is PowerShell - stderr output will be red. Redirect! "
      $env:PATH+=";C:\projects\julia\bin\"
      julia -e 'versioninfo();redirect_stderr(stderr);println(stdout, \"stdout\"); println(stderr, \"stderr\")'
      julia -e 'redirect_stderr(stdout);Pkg.init()'
      julia --depwarn=no -e 'redirect_stderr(stdout);using Pkg;Pkg.API.add(\"HttpServer\");using HttpServer;'
      julia --depwarn=no -e 'redirect_stderr(stdout);using Pkg;Pkg.API.add(\"HTTP\");using HTTP;'
      julia -e 'redirect_stderr(stdout);Pkg.clone(pwd(), \"WebSockets\");Pkg.build(\"WebSockets\")'
      Write-Host "This is PowerShell, build script finished."
test_script:
  - ps: |
      Write-Host "This is PS"
      julia -e 'redirect_stderr(stdout);@info(\"Local websockets directory:\", Pkg.dir(\"WebSockets\"));Pkg.test(\"WebSockets\")'
